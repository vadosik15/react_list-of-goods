{"version":3,"sources":["App.tsx","component/listGoods.tsx","index.tsx"],"names":["SortType","ListGoods","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortBy","reset","this","isListChanged","reorderedGoods","visibleGoods","sort","prevGood","nextGood","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,0FCdQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHnBC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,OAAS,SAACJ,GACR,EAAKG,SAAS,CACZH,cAdN,EAkBEK,MAAQ,WACN,EAAKF,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,KArBlB,4CAyBE,WAAU,IAAD,OACP,EAAiCO,KAAKR,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZQ,EAAgBP,IAAaT,EAASU,MAAQF,EAC9CS,EAzDH,SACLf,EADK,GAGM,IADTO,EACQ,EADRA,SAAUD,EACF,EADEA,WAENU,EAAY,YAAOhB,GAiBzB,OAfAgB,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQZ,GACN,KAAKT,EAASsB,SACZ,OAAOF,EAASG,cAAcF,GAChC,KAAKrB,EAASwB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OACpC,QACE,OAAO,MAITjB,GACFU,EAAaP,UAGRO,EAoCkBQ,CAAkBrB,EACvC,CAAEG,aAAYC,aAEhB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYpB,IAAaT,EAASsB,WACtCQ,QAAS,WACP,EAAKjB,OAAOb,EAASsB,WALzB,iCAWA,wBACEM,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYpB,IAAaT,EAASwB,SACtCM,QAAS,WACP,EAAKjB,OAAOb,EAASwB,SALzB,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAarB,IACjBsB,QAASf,KAAKJ,QAJhB,qBASCK,GAEC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACE,cAAC,EAAD,CAAWZ,MAAOe,aA9E5B,GAAyBc,IAAMC,WE1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8def81e4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { ListGoods } from './component/listGoods';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(nextGood);\n      case SortType.LENGTH:\n        return prevGood.length - nextGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortBy = (sortType: SortType) => {\n    this.setState({\n      sortType,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isListChanged = sortType !== SortType.NONE || isReversed;\n    const reorderedGoods = getReorderedGoods(goodsFromServer,\n      { isReversed, sortType });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={() => {\n              this.sortBy(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={() => {\n              this.sortBy(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isListChanged\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ListGoods goods={reorderedGoods} />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const ListGoods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}